#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $DIR/environment
binary=$build/src/tools/dcpomatic2

if [[ "$(uname -m)" == arm64 ]]; then
    env=arm64/11.0
else
    env=x86_64/10.10
fi

export DYLD_LIBRARY_PATH=/Users/cah/osx-environment/$env/lib:/usr/local/lib

# export ASAN_OPTIONS=verbosity=1:malloc_context_size=20:detect_leaks=1

if [ "$1" == "--debug" ]; then
    shift
    if [[ "$(uname)" == Darwin ]]; then
        /Applications/Xcode.app/Contents/Developer/usr/bin/lldb $binary $*
    else
        gdb --args $binary $*
    fi
elif [ "$1" == "--valgrind" ]; then
    shift
    valgrind --tool="memcheck" --suppressions=suppressions --track-fds=yes --show-leak-kinds=all --leak-check=full $binary $*
elif [ "$1" == "--callgrind" ]; then
    shift
    valgrind --tool="callgrind" $binary $*
elif [ "$1" == "--massif" ]; then
    shift
    valgrind --tool="massif" $binary $*
elif [ "$1" == "--i18n" ]; then
    shift
    LANGUAGE=de_DE.UTF8 LANG=de_DE.UTF8 LC_ALL=de_DE.UTF8 $binary "$*"
elif [ "$1" == "--perf" ]; then
    shift
    perf record $binary $*
elif [ "$1" == "--scaled" ]; then
    shift
    ~/src/run_scaled/run_scaled --sleep=5 --scale=0.5 $binary $*
elif [ "$1" == "--screenshot" ]; then
    shift
    GTK_PATH=/usr/local/lib/gtk-3.0 GTK_MODULES=gtk-vector-screenshot $binary "$*"
else
    $binary $* 2> >(grep -v Gtk-CRITICAL | grep -v Gtk-WARNING)
fi
